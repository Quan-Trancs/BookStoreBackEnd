# ============================================================================
# OPTIMIZED APPLICATION PROPERTIES FOR BOOKSTORE BACKEND
# ============================================================================
# This file contains optimized settings for better performance

# ============================================================================
# DATABASE CONFIGURATION - OPTIMIZED
# ============================================================================
spring.datasource.url=jdbc:postgresql://database-book-store.cxcsw8sq2csa.us-east-2.rds.amazonaws.com:5432/database-book-store
spring.datasource.username=postgres
spring.datasource.password=AQ123456789aq
spring.datasource.driver-class-name=org.postgresql.Driver

# Enhanced Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.connection-test-query=SELECT 1

# JPA Performance Optimizations
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.jdbc.fetch_size=20
spring.jpa.properties.hibernate.default_batch_fetch_size=20

# Query Performance Optimizations
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
spring.jpa.properties.hibernate.query.fail_on_pagination_over_collection_fetch=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# ============================================================================
# CACHE CONFIGURATION - OPTIMIZED
# ============================================================================
# Caffeine (L1 Cache) Configuration
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=10m,recordStats
spring.cache.caffeine.maximum-size=1000
spring.cache.caffeine.expire-after-write=10m

# Redis (L2 Cache) Configuration
spring.cache.redis.ttl=30m
spring.cache.redis.time-to-live=1800000
spring.cache.redis.cache-null-values=false

# Redis Connection Configuration
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD}
spring.redis.database=0
spring.redis.timeout=2000ms
spring.redis.lettuce.pool.max-active=20
spring.redis.lettuce.pool.max-idle=10
spring.redis.lettuce.pool.min-idle=5
spring.redis.lettuce.pool.max-wait=1000ms

# ============================================================================
# SERVER CONFIGURATION - OPTIMIZED
# ============================================================================
server.port=${SERVER_PORT:8082}
server.servlet.context-path=${SERVER_SERVLET_CONTEXT_PATH:/api}
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10
server.tomcat.accept-count=100
server.tomcat.connection-timeout=20000
server.tomcat.max-connections=8192
server.tomcat.accept-count=1000

# ============================================================================
# SECURITY CONFIGURATION - OPTIMIZED
# ============================================================================
# CORS Configuration - Secure defaults
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:5173,http://localhost:3000}
app.cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,PATCH,OPTIONS}
app.cors.allowed-headers=${CORS_ALLOWED_HEADERS:Authorization,Content-Type,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers}
app.cors.exposed-headers=${CORS_EXPOSED_HEADERS:Authorization,Content-Disposition}
app.cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}
app.cors.max-age=${CORS_MAX_AGE:3600}

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Rate Limiting Configuration
app.rate-limit.max-requests-per-minute=100
app.rate-limit.enabled=true

# ============================================================================
# LOGGING CONFIGURATION - OPTIMIZED
# ============================================================================
# Logging levels for performance monitoring
logging.level.quantran.api.repository=INFO
logging.level.quantran.api.service=INFO
logging.level.quantran.api.controller=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.springframework.cache=INFO
logging.level.org.springframework.data.redis=WARN

# Performance monitoring
logging.level.quantran.api.aspect.QueryPerformanceAspect=INFO

# ============================================================================
# MONITORING AND METRICS
# ============================================================================
# Actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics,caches
management.endpoint.health.show-details=when-authorized
management.endpoint.metrics.enabled=true
management.endpoint.caches.enabled=true

# Metrics configuration
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles-histogram.jvm.memory.used=true

# ============================================================================
# ASYNC PROCESSING CONFIGURATION
# ============================================================================
# Async task executor configuration
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=10
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=AsyncTask-

# ============================================================================
# QUERY OPTIMIZATION SETTINGS
# ============================================================================
# Query performance thresholds
app.query.performance.slow-threshold-ms=1000
app.query.performance.very-slow-threshold-ms=5000
app.query.performance.monitoring-enabled=true

# Batch processing settings
app.batch.processing.enabled=true
app.batch.processing.size=100
app.batch.processing.timeout-ms=30000

# Full-text search settings
app.search.full-text-enabled=true
app.search.minimum-query-length=2
app.search.max-results=1000

# ============================================================================
# CACHE-SPECIFIC CONFIGURATIONS
# ============================================================================
# Book cache settings
app.cache.books.ttl=15m
app.cache.books.max-size=500

# Author cache settings
app.cache.authors.ttl=20m
app.cache.authors.max-size=200

# Publisher cache settings
app.cache.publishers.ttl=20m
app.cache.publishers.max-size=100

# Search result cache settings
app.cache.search-results.ttl=10m
app.cache.search-results.max-size=1000

# ============================================================================
# DATABASE QUERY OPTIMIZATION
# ============================================================================
# PostgreSQL specific optimizations
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Connection pool monitoring
spring.datasource.hikari.register-mbeans=true
spring.datasource.hikari.metrics-registry-name=bookstore-hikari

# ============================================================================
# PERFORMANCE MONITORING
# ============================================================================
# Enable query performance monitoring
app.monitoring.query-performance.enabled=true
app.monitoring.query-performance.log-slow-queries=true
app.monitoring.query-performance.log-very-slow-queries=true

# Cache performance monitoring
app.monitoring.cache-performance.enabled=true
app.monitoring.cache-performance.log-cache-misses=true

# ============================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# ============================================================================
# Development environment
spring.profiles.include=dev

# Production overrides (set via environment variables)
# spring.datasource.hikari.maximum-pool-size=${DB_MAX_POOL_SIZE:30}
# spring.cache.caffeine.maximum-size=${CACHE_MAX_SIZE:1000}
# app.rate-limit.max-requests-per-minute=${RATE_LIMIT_MAX:100} 