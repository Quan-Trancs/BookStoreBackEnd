# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/bookstore}
spring.datasource.username=${DB_USERNAME:bookstore_user}
spring.datasource.password=${DB_PASSWORD:your_secure_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# ============================================================================
# SERVER CONFIGURATION
# ============================================================================
server.port=${SERVER_PORT:8082}
server.servlet.context-path=${SERVER_SERVLET_CONTEXT_PATH:/api}
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10
server.tomcat.accept-count=100
server.tomcat.connection-timeout=20000

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================
# CORS Configuration - Secure defaults
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:5173,http://localhost:3000}
app.cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,PATCH,OPTIONS}
app.cors.allowed-headers=${CORS_ALLOWED_HEADERS:Authorization,Content-Type,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers}
app.cors.exposed-headers=${CORS_EXPOSED_HEADERS:Authorization,Content-Disposition}
app.cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}
app.cors.max-age=${CORS_MAX_AGE:3600}

# Input Validation Configuration
app.validation.enable-strict-validation=${VALIDATION_STRICT:true}
app.validation.max-file-size=${MAX_FILE_SIZE:10MB}
app.validation.max-request-size=${MAX_REQUEST_SIZE:10MB}

# ============================================================================
# MONITORING & ACTUATOR
# ============================================================================
# Actuator endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always

# Health check configuration
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.health.diskspace.threshold=10MB

# Metrics configuration
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=bookstore-backend

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================
logging.level.root=INFO
logging.level.quantran.api=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Log file configuration
logging.file.name=logs/bookstore-backend.log
logging.file.max-size=100MB
logging.file.max-history=30
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ============================================================================
# FILE UPLOAD CONFIGURATION
# ============================================================================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# ============================================================================
# CACHE CONFIGURATION
# ============================================================================
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=600s

# ============================================================================
# ASYNC PROCESSING CONFIGURATION
# ============================================================================
# Task cleanup configuration
app.async.task.cleanup.days-to-keep=7
app.async.task.timeout.minutes=30

# ============================================================================
# CURRENCY CONFIGURATION
# ============================================================================
# Backend stores all prices in USD
# Frontend handles currency conversion and display
app.currency.base-currency=USD

# ============================================================================
# RATE LIMITING CONFIGURATION
# ============================================================================
app.rate-limit.max-requests-per-minute=100
app.rate-limit.enabled=true

# ============================================================================
# ENVIRONMENT SPECIFIC CONFIGURATIONS
# ============================================================================
# Development
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}

# Production overrides (set via environment variables)
# spring.jpa.hibernate.ddl-auto=validate
# logging.level.root=WARN
# logging.level.quantran.api=INFO

